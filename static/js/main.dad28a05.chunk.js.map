{"version":3,"sources":["components/Search/Search.module.scss","components/Trends/Trends.module.scss","components/Common/Movie/Movie.module.scss","components/Saved/Saved.module.scss","components/Common/Paginator/Paginator.module.scss","App.module.scss","components/Common/Preloader/Preloader.module.scss","components/About/About.module.scss","components/Header/Header.module.scss","components/Header/Header.tsx","api.ts","redux/searchReducer.ts","images/imagePlaceholder.jpg","components/Common/Movie/Movie.tsx","components/utils/truncateString.ts","components/Common/Paginator/Paginator.tsx","components/Common/Preloader/Preloader.tsx","components/Trends/Trends.tsx","components/Search/SearchForm.tsx","components/Search/Search.tsx","redux/store.ts","components/About/About.tsx","components/Saved/Saved.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","s","header","Navigation","navigation","navigator","title","link","activeClassName","active","replace","to","href","SVGs","display","id","viewBox","d","cx","cy","r","instance","axios","create","baseURL","searchEnglishAPI","page","movie","get","then","res","data","movieID","initialState","movies","ratedMovies","savedMovies","currentSearchName","currentPageSearch","totalPagesSearch","currentPageTrends","totalPagesTrends","aboutMovie","isFetching","isFetchingPage","actions","type","name","pages","Movie","str","num","poster","rating","useState","loaded","setLoaded","image","src","imgPlaceholder","alt","onLoad","imagePlaceholder","info","length","slice","Paginator","startPage","endPage","totalPages","currentPage","onPageChange","maxPagesBeforeCurrentPage","Math","floor","maxPages","maxPagesAfterCurrentPage","ceil","Array","from","keys","map","i","pagination","p","selectedPage","onClick","Preloader","memo","lds_roller","Trends","useSelector","state","search","dispatch","useDispatch","useEffect","getState","a","ratedMoviesData","total_pages","results","onGetRatedMovies","trends","head","heading","m","poster_path","vote_average","validate","values","errors","SearchForm","React","getMoviesByName","setCurrentPage","form","enableReinitialize","initialValues","validateOnChange","validateOnBlur","onSubmit","setSubmitting","isSubmitting","emptyError","textarea","maxLength","placeholder","button","disabled","Search","moviesData","onGetMoviesByName","getUpcomingMovies","onGetUpcomingMovies","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","__store__","About","userID","useParams","aboutID","onSetAboutMovie","whrapper","about","img","content","tagline","rates","rate","vote_count","runtime","release_date","sub","genres","g","languages","spoken_languages","overview","some","el","e","movieToSave","localStorage","setItem","JSON","stringify","currentTarget","empty","Saved","localSavedItems","getItem","parse","saved","App","app","main","exact","path","render","MoviesApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad28a05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3Q-BZ\",\"head\":\"Search_head__18Aj1\",\"heading\":\"Search_heading__v1U5b\",\"movies\":\"Search_movies__z4bek\",\"form\":\"Search_form__1ch7D\",\"textarea\":\"Search_textarea__3eFxG\",\"button\":\"Search_button__3PDnr\",\"emptyError\":\"Search_emptyError__uXOYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trends\":\"Trends_trends__1DSXL\",\"head\":\"Trends_head__tjlYJ\",\"heading\":\"Trends_heading__P6rY2\",\"movies\":\"Trends_movies__2IUhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2tGnw\",\"image\":\"Movie_image__2c8pa\",\"info\":\"Movie_info__11EVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whrapper\":\"Saved_whrapper__1TaOj\",\"empty\":\"Saved_empty__3pFto\",\"saved\":\"Saved_saved__18Cqo\",\"movies\":\"Saved_movies__3Ixyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__1aTti\",\"pages\":\"Paginator_pages__2uoqC\",\"selectedPage\":\"Paginator_selectedPage__3-1wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"Preloader_lds_roller__2RD8m\",\"lds-roller\":\"Preloader_lds-roller__jW5PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whrapper\":\"About_whrapper__Wj1sY\",\"empty\":\"About_empty__3QiTk\",\"about\":\"About_about__AswM6\",\"img\":\"About_img__1kT_-\",\"content\":\"About_content__3MRnc\",\"heading\":\"About_heading__2N5u-\",\"tagline\":\"About_tagline__1fPa3\",\"rates\":\"About_rates__2JoUV\",\"rate\":\"About_rate__3dCdz\",\"sub\":\"About_sub__2aUj1\",\"genres\":\"About_genres__24h5N\",\"languages\":\"About_languages__2wL0i\",\"overview\":\"About_overview__38nBN\",\"button\":\"About_button__3ohsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"navigation\":\"Header_navigation__21e3H\",\"navigator\":\"Header_navigator__7FmRV\",\"link\":\"Header_link__1uLZ-\",\"active\":\"Header_active__3GX0s\"};","import s from './Header.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nexport const Header: React.FC = () => {\n    return <header className={s.header}>\n        <Navigation />\n    </header>\n}\n\nconst Navigation: React.FC = () => {\n    return <nav className={s.navigation}>\n        <SVGs />\n        <div className={s.navigator}>\n            <NavLink title=\"search\" className={s.link} activeClassName={s.active} replace to=\"/search\">\n                <svg><use href=\"#search\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"trends\" className={s.link} activeClassName={s.active} replace to=\"/trends\">\n                <svg><use href=\"#trends\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"saved\" className={s.link} activeClassName={s.active} replace to=\"/saved\">\n                <svg><use href=\"#saved\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"about\" className={s.link} activeClassName={s.active} replace to=\"/about\">\n                <svg><use href=\"#about\"></use></svg>\n            </NavLink>\n        </div>\n    </nav>\n}\n\nconst SVGs: React.FC = () => {\n    return <svg display=\"none\" >\n        <symbol id=\"search\" viewBox=\"0 0 512 512\">\n            <g>\n                <g>\n                    <path d=\"M225.474,0C101.151,0,0,101.151,0,225.474c0,124.33,101.151,225.474,225.474,225.474\n                    c124.33,0,225.474-101.144,225.474-225.474C450.948,101.151,349.804,0,225.474,0z M225.474,409.323\n                    c-101.373,0-183.848-82.475-183.848-183.848S124.101,41.626,225.474,41.626s183.848,82.475,183.848,183.848\n                    S326.847,409.323,225.474,409.323z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <path d=\"M505.902,476.472L386.574,357.144c-8.131-8.131-21.299-8.131-29.43,0c-8.131,8.124-8.131,21.306,0,29.43l119.328,119.328\n                    c4.065,4.065,9.387,6.098,14.715,6.098c5.321,0,10.649-2.033,14.715-6.098C514.033,497.778,514.033,484.596,505.902,476.472z\"/>\n                </g>\n            </g>\n        </symbol>\n        <symbol id=\"saved\" viewBox=\"0 0 404 404\">\n            <path d=\"m277.527344 0h-267.257813c-5.523437 0-10 4.476562-10 10v374.527344c-.011719 7.503906 4.183594 14.378906 10.855469 17.804687\n                6.675781 3.429688 14.707031 2.832031 20.796875-1.550781l111.976563-80.265625 111.976562 80.269531c6.097656 4.367188 14.121094 4.960938\n                20.792969 1.535156 6.667969-3.425781 10.863281-10.292968 10.863281-17.792968v-374.527344c0-5.523438-4.480469-10-10.003906-10zm0 0\" />\n        </symbol>\n        <symbol id=\"trends\" viewBox=\"0 0 512 512\">\n            <path d=\"m284.90625 132.957031c-3.484375-5.761719-10.378906-8.5-16.867188-6.691406-6.484374 1.808594-10.972656 7.71875-10.972656 14.449219\n                0 18.308594-14.894531 33.199218-33.199218 33.199218-18.304688\n                0-33.199219-14.890624-33.199219-33.199218v-125.714844c0-6.066406-3.65625-11.535156-9.261719-13.855469-5.605469-2.324219-12.054688-1.042969-16.34375\n                3.25-1.6875 1.683594-41.683594 41.917969-82.207031 102.703125-23.898438 35.84375-42.96875 71.398438-56.679688 105.675782-17.367187 43.425781-26.175781\n                84.996093-26.175781 123.5625 0 96.859374 78.804688 175.664062 175.667969 175.664062 96.859375 0 175.664062-78.804688\n                175.664062-175.664062.003907-62.003907-22.347656-130.429688-66.425781-203.378907zm-9.148438 199.476563c0 8.285156-6.714843 15-15 15-8.28125\n                0-15-6.714844-15-15v-28.050782l-74.6875 74.691407c-2.816406 2.8125-6.628906 4.390625-10.609374 4.390625-3.976563\n                0-7.792969-1.578125-10.605469-4.390625l-34.835938-34.839844-23.476562 23.476563c-5.859375 5.859374-15.355469 5.859374-21.214844\n                0-5.859375-5.859376-5.859375-15.355469 0-21.214844l34.085937-34.082032c5.859376-5.855468 15.355469-5.855468 21.214844.003907l34.832032 34.835937\n                64.085937-64.085937h-28.054687c-8.285157 0-15-6.714844-15-15 0-8.285157 6.714843-15 15-15h64.269531c8.28125 0 15 6.71875 15 15v64.265625zm0 0\" />\n        </symbol>\n        <symbol id=\"about\" viewBox=\"0 0 512 512\">\n            <g>\n                <g>\n                    <path d=\"M256,0C114.497,0,0,114.507,0,256c0,141.503,114.507,256,256,256c141.503,0,256-114.507,256-256\n\t\t\tC512,114.497,397.492,0,256,0z M256,472c-119.393,0-216-96.615-216-216c0-119.393,96.615-216,216-216\n\t\t\tc119.393,0,216,96.615,216,216C472,375.393,375.384,472,256,472z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <path d=\"M256,214.33c-11.046,0-20,8.954-20,20v128.793c0,11.046,8.954,20,20,20s20-8.955,20-20.001V234.33\n\t\t\tC276,223.284,267.046,214.33,256,214.33z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <circle cx=\"256\" cy=\"162.84\" r=\"27\" />\n                </g>\n            </g>\n        </symbol>\n    </svg>\n}","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/'\n})\n\nexport const searchEnglishAPI = {\n    getMoviesByName(page: number, movie: string) {\n        return instance.get(`search/movie?api_key=db9335d85fa75ffde96f893df33598bb&query=${movie}&page=${page}`).then(res => res.data)\n    },\n    getMovieCredits(movieID: number | null) {\n        return instance.get(`movie/${movieID}?api_key=db9335d85fa75ffde96f893df33598bb`).then(res => res.data)\n    },\n    getRatedMovies(page: number) {\n        return instance.get(`movie/top_rated?api_key=db9335d85fa75ffde96f893df33598bb&page=${page}`).then(res => res.data)\n    },\n    getUpcomingMovies(page: number) {\n        return instance.get(`movie/upcoming?api_key=db9335d85fa75ffde96f893df33598bb&page=${page}`).then(res => res.data)\n    }\n}","import { searchEnglishAPI } from \"../api\"\nimport { MovieType, SavedMovieType } from \"../components/types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    movies: [] as Array<MovieType>,\n    ratedMovies: [] as Array<MovieType>,\n    savedMovies: [] as Array<SavedMovieType>,\n    currentSearchName: '',\n    currentPageSearch: 1,\n    totalPagesSearch: 1,\n    currentPageTrends: 1,\n    totalPagesTrends: 1,\n    aboutMovie: null as null | MovieType,\n    isFetching: false,\n    isFetchingPage: false,\n}\n\nexport const searchReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'M/SEARCH/SET_RATED_MOVIES':\n            return {\n                ...state,\n                ratedMovies: action.ratedMovies\n            }\n        case 'M/SEARCH/SET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies\n            }\n        case 'M/SEARCH/SET_CURRENT_SEARCH_NAME':\n            return {\n                ...state,\n                currentSearchName: action.currentSearchName\n            }\n        case 'M/SEARCH/SET_CURRENT_PAGE_SEARCH':\n            return {\n                ...state,\n                currentPageSearch: action.currentPageSearch\n            }\n        case 'M/SEARCH/SET_TOTAL_PAGES_SEARCH':\n            return {\n                ...state,\n                totalPagesSearch: action.totalPagesSearch\n            }\n        case 'M/SEARCH/SET_CURRENT_PAGE_TRENDS':\n            return {\n                ...state,\n                currentPageTrends: action.currentPageTrends\n            }\n        case 'M/SEARCH/SET_TOTAL_PAGES_TRENDS':\n            return {\n                ...state,\n                totalPagesTrends: action.totalPagesTrends\n            }\n        case 'M/SEARCH/SET_ABOUT_MOVIE':\n            return {\n                ...state,\n                aboutMovie: action.aboutMovie\n            }\n        case 'M/SEARCH/SET_SAVED_MOVIE':\n            return {\n                ...state,\n                savedMovies: action.savedMovies\n            }\n        case 'M/SEARCH/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'M/SEARCH/TOGGLE_IS_FETCHING_PAGE':\n            return {\n                ...state,\n                isFetchingPage: action.isFetchingPage\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Common\n    setIsFetching: (isFetching: boolean) => ({ type: 'M/SEARCH/TOGGLE_IS_FETCHING', isFetching } as const),\n    setIsFetchingPage: (isFetchingPage: boolean) => ({ type: 'M/SEARCH/TOGGLE_IS_FETCHING_PAGE', isFetchingPage } as const),\n    // Search\n    setMovies: (movies: Array<MovieType>) => ({ type: 'M/SEARCH/SET_MOVIES', movies: movies } as const),\n    setCurrentSearchName: (name: string) => ({ type: 'M/SEARCH/SET_CURRENT_SEARCH_NAME', currentSearchName: name } as const),\n    setCurrentPageSearch: (page: number) => ({ type: 'M/SEARCH/SET_CURRENT_PAGE_SEARCH', currentPageSearch: page } as const),\n    setTotalPagesSearch: (pages: number) => ({ type: 'M/SEARCH/SET_TOTAL_PAGES_SEARCH', totalPagesSearch: pages } as const),\n    // Trends\n    setRatedMovies: (ratedMovies: Array<MovieType>) => ({ type: 'M/SEARCH/SET_RATED_MOVIES', ratedMovies: ratedMovies } as const),\n    setCurrentPageTrends: (page: number) => ({ type: 'M/SEARCH/SET_CURRENT_PAGE_TRENDS', currentPageTrends: page } as const),\n    setTotalPagesTrends: (pages: number) => ({ type: 'M/SEARCH/SET_TOTAL_PAGES_TRENDS', totalPagesTrends: pages } as const),\n    // About\n    setAboutMovie: (movie: MovieType) => ({ type: 'M/SEARCH/SET_ABOUT_MOVIE', aboutMovie: movie } as const),\n    setSavedMovies: (movies: Array<SavedMovieType>) => ({ type: 'M/SEARCH/SET_SAVED_MOVIE', savedMovies: movies } as const),\n}\n\n// Search\nexport const onGetMoviesByName = (page: number, movie: string): ThunkType => async (dispatch, getState) => {\n    const currentPage = getState().search.currentPageSearch\n    // To keep pagination and search it needs two fetches\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const moviesData = await searchEnglishAPI.getMoviesByName(page, movie)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setTotalPagesSearch(moviesData.total_pages))\n    dispatch(actions.setMovies(moviesData.results))\n}\n\nexport const onGetUpcomingMovies = (page: number): ThunkType => async (dispatch, getState) => {\n    const currentPage = getState().search.currentPageSearch\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const moviesData = await searchEnglishAPI.getUpcomingMovies(page)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setTotalPagesSearch(moviesData.total_pages))\n    dispatch(actions.setMovies(moviesData.results))\n}\n\n// Trends\nexport const onGetRatedMovies = (page: number): ThunkType => async(dispatch, getState) => {\n    const currentPage = getState().search.currentPageTrends\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const ratedMoviesData = await searchEnglishAPI.getRatedMovies(page)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setIsFetching(false))\n    dispatch(actions.setTotalPagesTrends(ratedMoviesData.total_pages))\n    dispatch(actions.setRatedMovies(ratedMoviesData.results))\n}\n\n// About\nexport const onSetAboutMovie = (id: number): ThunkType => async dispatch => {\n    dispatch(actions.setIsFetching(true))\n    const moviesData = await searchEnglishAPI.getMovieCredits(id)\n    dispatch(actions.setIsFetching(false))\n    dispatch(actions.setAboutMovie(moviesData))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","export default __webpack_public_path__ + \"static/media/imagePlaceholder.8226fdf2.jpg\";","import s from './Movie.module.scss'\nimport imagePlaceholder from './../../../images/imagePlaceholder.jpg'\nimport { truncateString } from '../../utils/truncateString'\nimport { NavLink } from 'react-router-dom'\nimport { useState } from 'react'\nimport imgPlaceholder from './../../../images/imagePlaceholder.jpg'\n\ntype PropsType = {\n    id: number\n    title: string\n    poster: string\n    rating: number\n}\n\nexport const Movie: React.FC<PropsType> = ({ title, poster, rating, id }) => {\n    // Img load slow internet\n    const [loaded, setLoaded] = useState(false)\n\n    return <NavLink className={s.movie} to={'/about/' + id}>\n        {!loaded && <img className={s.image} src={imgPlaceholder} alt={title} />}\n        <img onLoad={() => setLoaded(true)} className={s.image} src={poster === null ? imagePlaceholder : `https://image.tmdb.org/t/p/w500${poster}`} alt={title} />\n        <div className={s.info}>\n            <h3>{truncateString(title, 25)}</h3>\n            <p>{rating ? `${rating} / 10` : 'Rating is not availible'}</p>\n        </div>\n    </NavLink>\n}","export const truncateString = (str: string, num: number) => {\n    // If the length of str is less than or equal to num\n    // just return str--don't truncate it.\n    if (str.length <= num) {\n        return str\n    }\n    // Return str truncated with '...' concatenated to the end of str.\n    return str.slice(0, num - 3) + '...'\n}","import s from './Paginator.module.scss'\n\ntype PropsType = {\n    totalPages: number\n    currentPage: number\n    onPageChange: (page: number) => void\n}\n\nexport const Paginator: React.FC<PropsType> = ({ totalPages, currentPage = 1, onPageChange } ) => {\n    \n    const maxPages: number = 3\n\n    // ensure current page isn't out of range\n    if (currentPage < 1) {\n        currentPage = 1\n    } else if (currentPage > totalPages) {\n        currentPage = totalPages\n    }\n\n    let startPage: number, endPage: number\n    if (totalPages <= maxPages) {\n        // total pages less than max so show all pages\n        startPage = 1\n        endPage = totalPages\n    } else {\n        // total pages more than max so calculate start and end pages\n        let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2)\n        let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1\n        if (currentPage <= maxPagesBeforeCurrentPage) {\n            // current page near the start\n            startPage = 1\n            endPage = maxPages\n        } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n            // current page near the end\n            startPage = totalPages - maxPages + 1\n            endPage = totalPages\n        } else {\n            // current page somewhere in the middle\n            startPage = currentPage - maxPagesBeforeCurrentPage\n            endPage = currentPage + maxPagesAfterCurrentPage\n        }\n    }\n\n    // create an array of pages to ng-repeat in the pager control\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i)\n\n\n    return <div className={s.pagination}>\n        {pages.map(p => {\n            return <button key={p} className={`${currentPage === p && s.selectedPage} ${s.pages}`}\n            onClick={() => { onPageChange(p) }}>{p}</button>\n        })}\n    </div>\n}","import { memo } from 'react'\nimport s from './Preloader.module.scss'\n\nexport const Preloader: React.FC = memo(() => {\n    return (\n        <div className={s.lds_roller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n})","import { memo, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, onGetRatedMovies } from '../../redux/searchReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Trends.module.scss'\nimport { Movie } from './../Common/Movie/Movie'\nimport { MovieType } from '../types'\nimport { Paginator } from './../Common/Paginator/Paginator'\nimport { Preloader } from './../Common/Preloader/Preloader'\n\nexport const Trends: React.FC = memo(() => {\n    const ratedMovies = useSelector((state: AppStateType) => state.search.ratedMovies)\n    const currentPage = useSelector((state: AppStateType) => state.search.currentPageTrends)\n    const totalPages = useSelector((state: AppStateType) => state.search.totalPagesTrends)\n    // Loaders\n    const isFetching = useSelector((state: AppStateType) => state.search.isFetching)\n    const isFetchingPage = useSelector((state: AppStateType) => state.search.isFetchingPage)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const getRatedMovies = (page: number) => { dispatch(onGetRatedMovies(page)) }\n        getRatedMovies(currentPage)\n    }, [dispatch, currentPage])\n\n    const onPageChange = (page: number) => dispatch(actions.setCurrentPageTrends(page))\n\n    return <div className={s.trends}>\n        {isFetching ? <Preloader />\n            :<>\n                <div className={s.head}>\n                    <span className={s.heading}>Trends</span>\n                    <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                </div>\n                {isFetchingPage ? <Preloader />\n                    : <>\n                        <div className={s.movies}>\n                            {ratedMovies.map((m: MovieType) =>\n                                <Movie key={m.id} id={m.id} title={m.title} poster={`https://image.tmdb.org/t/p/w500${m.poster_path}`} rating={m.vote_average} />\n                            )}\n                        </div>\n                        <div className={s.head}>\n                            <span className={s.heading}>Trends</span>\n                            <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                        </div>\n                    </>}\n            </>}\n    </div>\n})\n","import s from './Search.module.scss'\nimport { Field, Form, Formik } from 'formik'\nimport React from 'react'\n\ntype PropsType = {\n    getMoviesByName: (page: number, movie: string) => void\n    setCurrentPage: (page: number) => void\n}\n\ntype FormType = {\n    movie: string\n}\n\ntype ValidType = {\n    movie?: string\n}\n\nconst validate = (values: any) => {\n    const errors: ValidType = {}\n    if (!values.movie) {\n        errors.movie = 'You can\\'t search for nothing'\n    }\n    if (values.movie.length > 30) {\n        errors.movie = 'You are gay'\n    }\n    return errors\n}\n\nexport const SearchForm: React.FC<PropsType> = React.memo(({ getMoviesByName, setCurrentPage }) => {\n\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        getMoviesByName(1, values.movie)\n        setCurrentPage(1)\n        setSubmitting(false)\n    }\n\n    return <div className={s.form}>\n        <Formik\n            enableReinitialize\n            initialValues={{ movie: '' }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={validate}\n            onSubmit={submit}\n        >\n            {({ errors, isSubmitting }) => (\n                <Form>\n                    {errors.movie && <span className={s.emptyError}>{errors.movie}</span>}\n                    <Field className={s.textarea} maxLength=\"30\" type=\"text\" name=\"movie\" placeholder=\"Type here to search...\" />\n                    <button className={s.button} type=\"submit\" disabled={isSubmitting}>\n                        <svg viewBox=\"0 0 20 20\">\n                            <path d=\"M19.129,18.164l-4.518-4.52c1.152-1.373,1.852-3.143,1.852-5.077c0-4.361-3.535-7.896-7.896-7.896\n\t\t\t\t\t\t\t\tc-4.361,0-7.896,3.535-7.896,7.896s3.535,7.896,7.896,7.896c1.934,0,3.705-0.698,5.078-1.853l4.52,4.519\n\t\t\t\t\t\t\t\tc0.266,0.268,0.699,0.268,0.965,0C19.396,18.863,19.396,18.431,19.129,18.164z M8.567,15.028c-3.568,0-6.461-2.893-6.461-6.461\n\t\t\t\t\t\t\t\ts2.893-6.461,6.461-6.461c3.568,0,6.46,2.893,6.46,6.461S12.135,15.028,8.567,15.028z\"></path>\n                        </svg>\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n})","import { useDispatch, useSelector } from 'react-redux'\nimport { onGetUpcomingMovies, onGetMoviesByName, actions } from '../../redux/searchReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Search.module.scss'\nimport { Movie } from '../Common/Movie/Movie'\nimport { SearchForm } from './SearchForm'\nimport { MovieType } from '../types'\nimport { memo, useEffect } from 'react'\nimport { Paginator } from './../Common/Paginator/Paginator'\nimport { Preloader } from './../Common/Preloader/Preloader'\n\nexport const Search: React.FC = memo(() => {\n    const movies = useSelector((state: AppStateType) => state.search.movies)\n    const currentSearchName = useSelector((state: AppStateType) => state.search.currentSearchName)\n    const currentPage = useSelector((state: AppStateType) => state.search.currentPageSearch)\n    const totalPages = useSelector((state: AppStateType) => state.search.totalPagesSearch)\n    // Loaders\n    const isFetching = useSelector((state: AppStateType) => state.search.isFetching)\n    const isFetchingPage = useSelector((state: AppStateType) => state.search.isFetchingPage)\n\n    const dispatch = useDispatch()\n\n    const getMoviesByName = (page: number, movie: string) => {\n        dispatch(actions.setCurrentSearchName(movie))\n        dispatch(onGetMoviesByName(page, movie))\n    }\n    const getUpcomingMovies = (page: number) => { dispatch(onGetUpcomingMovies(page)) }\n    // To reset to 1 when sth is searched\n    const setCurrentPage = (page: number) => { dispatch(actions.setCurrentPageSearch(page)) }\n\n    useEffect(() => {\n        if (currentSearchName) {\n            getMoviesByName(currentPage, currentSearchName)\n        } else {\n            getUpcomingMovies(currentPage)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentPage])\n\n    const onPageChange = (page: number) => dispatch(actions.setCurrentPageSearch(page))\n    \n    return <div className={s.search}>\n        <SearchForm getMoviesByName={getMoviesByName} setCurrentPage={setCurrentPage} />\n        {isFetching ? <Preloader /> : movies.length < 1\n            ? <span className={s.heading}>No movies found.</span>\n            : <>\n                <div className={s.head}>\n                    <span className={s.heading}>{!currentSearchName ? 'Upcoming' : currentSearchName}</span>\n                    <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                </div>\n                {isFetchingPage ? <Preloader />\n                    : <> <div className={s.movies}>\n                            {movies.map((m: MovieType) =>\n                                <Movie key={m.id} id={m.id} title={m.title} poster={m.poster_path} rating={m.vote_average} />\n                            )}\n                        </div>\n                        <div className={s.head}>\n                            <span className={s.heading}>{!currentSearchName ? 'Upcoming' : currentSearchName}</span>\n                            <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                        </div>\n                    </>\n                }\n            </>}\n    </div>\n})","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk, { ThunkAction } from 'redux-thunk'\nimport { searchReducer } from './searchReducer'\n\nconst rootReducer = combineReducers({\n    search: searchReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n// @ts-ignore\nwindow.__store__ = store\n\ntype RootReducerType = typeof rootReducer // (globalstate: GLOBALSTATE) => GLOBALSTATE\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>","import { memo, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { onSetAboutMovie } from '../../redux/searchReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './About.module.scss'\nimport { MovieType, SavedMovieType } from '../types'\nimport { NavLink, useParams } from 'react-router-dom'\nimport { Preloader } from '../Common/Preloader/Preloader'\nimport imgPlaceholder from './../../images/imagePlaceholder.jpg'\n\nexport const About: React.FC = memo(() => {    \n    const aboutMovie: null | MovieType = useSelector((state: AppStateType) => state.search.aboutMovie)\n    const savedMovies: Array<SavedMovieType> = useSelector((state: AppStateType) => state.search.savedMovies)\n    const isFetching = useSelector((state: AppStateType) => state.search.isFetching)\n    \n    const dispatch = useDispatch()\n    // Getting userID\n    const params: { aboutID: string | undefined } = useParams()\n    const userID = params.aboutID\n\n    useEffect(() => {\n        // Seting the movie\n        const setAboutMovie = (id: number) => { dispatch(onSetAboutMovie(id)) }\n        !!userID && setAboutMovie(+userID)\n    }, [dispatch, userID])\n\n    const saveMovie = (e: React.MouseEvent<HTMLInputElement>) => {\n        const movieToSave = {\n            id: aboutMovie?.id,\n            title: aboutMovie?.title,\n            poster: `https://image.tmdb.org/t/p/w500${aboutMovie?.poster_path}`,\n            rate: aboutMovie?.vote_average,\n        }\n        if (savedMovies.length === 0) {\n            localStorage.setItem('savedMovies', `[${JSON.stringify(movieToSave)}]`)\n        } else {\n            localStorage.setItem('savedMovies', JSON.stringify([...savedMovies, movieToSave]))\n        }\n        e.currentTarget.disabled = true\n    }\n\n    // Img load slow internet\n    const [loaded, setLoaded] = useState(false)\n\n    return <div className={s.whrapper}>\n        {isFetching ? <Preloader />\n            : <>\n                {!aboutMovie ? <p className={s.empty}>To see something select a <NavLink to=\"/search\">movie</NavLink>.</p>\n                    : <div className={s.about}>\n                        <div>\n                            {!loaded && <img className={s.img} src={imgPlaceholder} alt={aboutMovie.title} />}\n                            <img onLoad={() => setLoaded(true)} className={s.img} src={`https://image.tmdb.org/t/p/w500${aboutMovie.poster_path}`} alt={aboutMovie.title} />\n                        </div>\n                        <div className={s.content}>\n                            <h2 className={s.heading}>{aboutMovie.title}</h2>\n                            <p className={s.tagline}>{aboutMovie.tagline}</p>\n                            <div className={s.rates}>\n                                <span className={s.rate}>{aboutMovie.vote_average} / 10 <span>({aboutMovie.vote_count})</span></span>\n                                {/* <span className={s.rate}>{aboutMovie.production_countries[0].name} / {aboutMovie.runtime} min. / {aboutMovie.release_date.slice(0, 4)} year</span> */}\n                                <span className={s.rate}>{aboutMovie.runtime} min. / {aboutMovie.release_date.slice(0, 4)} year</span>\n                            </div>\n                            <p className={s.sub}>Genres</p>\n                            <div className={s.genres}>\n                                {aboutMovie.genres.map(g => <span key={g.id}>{g.name}</span>)}\n                            </div>\n                            <p className={s.sub}>Languages</p>\n                            <div className={s.languages}>\n                                {aboutMovie.spoken_languages.map(g => <span key={g.name}>{g.name}</span>)}\n                            </div>\n                            <p className={s.sub}>Overview</p>\n                            <p className={s.overview}>{aboutMovie.overview}</p>\n                            {savedMovies.some(el => el.id === aboutMovie.id) ? <button title=\"You have already saved this movie\" disabled className={s.button}>save</button>\n                                : <button onClick={saveMovie as () => void} className={s.button}>save</button>}\n                        </div>\n                    </div>}\n            </>\n        }\n    </div>\n})","import { memo, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions } from '../../redux/searchReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Saved.module.scss'\nimport { Movie } from './../Common/Movie/Movie'\nimport { SavedMovieType } from '../types'\nimport { NavLink } from 'react-router-dom'\nimport { Preloader } from '../Common/Preloader/Preloader'\n\nexport const Saved: React.FC = memo(() => {\n    const ratedMovies = useSelector((state: AppStateType) => state.search.savedMovies)\n    const isFetching = useSelector((state: AppStateType) => state.search.isFetching)\n\n    const dispatch = useDispatch()\n    const localSavedItems = localStorage.getItem('savedMovies')\n\n    useEffect(() => {\n        const setSavedMovies = (movies: Array<SavedMovieType>) => { dispatch(actions.setSavedMovies(movies)) }\n        setSavedMovies(JSON.parse('' + localSavedItems))\n    }, [dispatch, localSavedItems])\n\n    return <div className={s.whrapper}>\n        {isFetching ? <Preloader />\n            : <>\n                {ratedMovies.length === 0 ? <p className={s.empty}>To see something save a <NavLink to=\"/search\">movie</NavLink>.</p>\n                    : <div className={s.saved}>\n                        <div className={s.movies}>\n                            {ratedMovies.map((m: SavedMovieType) =>\n                                <Movie key={m.id} id={m.id} title={m.title} poster={m.poster} rating={m.rate} />\n                            )}\n                        </div>\n                    </div>}\n            </>}\n    </div>\n})\n","import s from './App.module.scss'\nimport { Header } from './components/Header/Header'\nimport { Trends } from './components/Trends/Trends'\nimport { Search } from './components/Search/Search'\nimport { Route, HashRouter, Switch, Redirect } from 'react-router-dom'\nimport { Provider, useDispatch } from 'react-redux'\nimport { store } from './redux/store'\nimport { About } from './components/About/About'\nimport { memo, useEffect } from 'react'\nimport { Saved } from './components/Saved/Saved'\nimport { SavedMovieType } from './components/types'\nimport { actions } from './redux/searchReducer'\n\nconst App: React.FC = memo(() => {\n  const localSavedItems = localStorage.getItem('savedMovies')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (localSavedItems === null) {\n      localStorage.setItem('savedMovies', '[]')\n    } else {\n      const setSavedMovies = (movies: Array<SavedMovieType>) => { dispatch(actions.setSavedMovies(movies)) }\n      setSavedMovies(JSON.parse(localSavedItems))\n    }\n  }, [dispatch, localSavedItems])\n  \n  return (\n    <div className={s.app}>\n      <Header />\n      <main className={s.main}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to={'/search'} />} />\n          <Route path=\"/search\" render={() => <Search />} />\n          <Route path=\"/trends\" render={() => <Trends />} />\n          <Route path=\"/saved\" render={() => <Saved />} />\n          <Route path=\"/about/:aboutID?\" render={() => <About />} />\n          <Route exact path=\"*\" render={() => <Redirect to={'/search'} />} />\n        </Switch>\n      </main>\n    </div>\n  )\n})\n\nexport const MoviesApp: React.FC = () => {\n  return <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { MoviesApp } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoviesApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}