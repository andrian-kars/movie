{"version":3,"sources":["components/Header/Header.tsx","api.ts","redux/trendsReducer.ts","images/imagePlaceholder.jpg","components/Common/Movie/Movie.tsx","utils/truncateString.ts","components/Common/Paginator/Paginator.tsx","components/Common/Preloader/Preloader.tsx","components/Trends/Trends.tsx","redux/searchReducer.ts","components/Search/SearchForm.tsx","components/Search/Search.tsx","redux/genresReducer.ts","components/Genres/GenresSelect.tsx","components/Genres/Genres.tsx","redux/aboutReducer.ts","redux/store.ts","components/About/About.tsx","components/Saved/Saved.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Search/Search.module.scss","components/Genres/Genres.module.scss","components/Trends/Trends.module.scss","components/Common/Movie/Movie.module.scss","components/Saved/Saved.module.scss","components/Common/Paginator/Paginator.module.scss","App.module.scss","components/Common/Preloader/Preloader.module.scss","components/About/About.module.scss","components/Header/Header.module.scss"],"names":["Header","className","s","header","Navigation","navigation","navigator","title","link","activeClassName","active","replace","to","href","SVGs","display","id","viewBox","d","cx","cy","r","instance","axios","create","baseURL","api","page","movie","get","then","res","data","movieID","genres","initialState","ratedMovies","currentPage","totalPages","isFetching","isFetchingPage","actions","type","Movie","poster","rating","genresID","release","allGenres","useSelector","state","console","log","str","num","genresNames","map","el","includes","name","filter","length","useState","loaded","setLoaded","onLoad","image","src","imagePlaceholder","alt","info","slice","replaceAll","Paginator","startPage","endPage","onPageChange","maxPagesBeforeCurrentPage","Math","floor","maxPages","maxPagesAfterCurrentPage","ceil","pages","Array","from","keys","i","pagination","p","selectedPage","onClick","Preloader","memo","lds_roller","Trends","trends","dispatch","useDispatch","useEffect","getState","a","ratedMoviesData","total_pages","results","onGetRatedMovies","head","heading","movies","m","genre_ids","release_date","poster_path","vote_average","currentSearchName","validate","values","errors","SearchForm","React","getMoviesByName","setCurrentPage","form","enableReinitialize","initialValues","validateOnChange","validateOnBlur","onSubmit","setSubmitting","isSubmitting","emptyError","textarea","maxLength","placeholder","button","disabled","Search","search","moviesData","onGetMoviesByName","getUpcomingMovies","onGetUpcomingMovies","GenresSelect","setGenres","multi","options","label","value","onChange","Genres","onGetMoviesByGenre","getMoviesByGenre","join","savedMovies","aboutMovie","rootReducer","combineReducers","action","about","store","createStore","applyMiddleware","thunk","window","__store__","About","userID","useParams","aboutID","onSetAboutMovie","whrapper","img","imgPlaceholder","content","tagline","rates","rate","vote_count","runtime","sub","g","languages","spoken_languages","overview","some","e","movieToSave","localStorage","setItem","JSON","stringify","currentTarget","empty","Saved","localSavedItems","getItem","parse","saved","App","genresData","app","main","exact","path","render","MoviesApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4ebda578.chunk.js","sourcesContent":["import s from './Header.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nexport const Header: React.FC = () => {\n    return <header className={s.header}>\n        <Navigation />\n    </header>\n}\n\nconst Navigation: React.FC = () => {\n    return <nav className={s.navigation}>\n        <SVGs />\n        <div className={s.navigator}>\n            <NavLink title=\"search\" className={s.link} activeClassName={s.active} replace to=\"/search\">\n                <svg><use href=\"#search\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"genres\" className={s.link} activeClassName={s.active} replace to=\"/genres\">\n                <svg><use href=\"#genres\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"trends\" className={s.link} activeClassName={s.active} replace to=\"/trends\">\n                <svg><use href=\"#trends\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"saved\" className={s.link} activeClassName={s.active} replace to=\"/saved\">\n                <svg><use href=\"#saved\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"about\" className={s.link} activeClassName={s.active} replace to=\"/about\">\n                <svg><use href=\"#about\"></use></svg>\n            </NavLink>\n        </div>\n    </nav>\n}\n\nconst SVGs: React.FC = () => {\n    return <svg display=\"none\" >\n        <symbol id=\"genres\" viewBox=\"0 0 18 18\">\n            <path d=\"M16.85,7.275l-3.967-0.577l-1.773-3.593c-0.208-0.423-0.639-0.69-1.11-0.69s-0.902,0.267-1.11,0.69L7.116,6.699L3.148,7.275c-0.466,0.068-0.854,0.394-1,0.842c-0.145,0.448-0.023,0.941,0.314,1.27l2.871,2.799l-0.677,3.951c-0.08,0.464,0.112,0.934,0.493,1.211c0.217,0.156,0.472,0.236,0.728,0.236c0.197,0,0.396-0.048,0.577-0.143l3.547-1.864l3.548,1.864c0.18,0.095,0.381,0.143,0.576,0.143c0.256,0,0.512-0.08,0.729-0.236c0.381-0.277,0.572-0.747,0.492-1.211l-0.678-3.951l2.871-2.799c0.338-0.329,0.459-0.821,0.314-1.27C17.705,7.669,17.316,7.343,16.85,7.275z M13.336,11.754l0.787,4.591l-4.124-2.167l-4.124,2.167l0.788-4.591L3.326,8.5l4.612-0.67l2.062-4.177l2.062,4.177l4.613,0.67L13.336,11.754z\"></path>\n        </symbol>\n        <symbol id=\"search\" viewBox=\"0 0 512 512\">\n            <g>\n                <g>\n                    <path d=\"M225.474,0C101.151,0,0,101.151,0,225.474c0,124.33,101.151,225.474,225.474,225.474\n                    c124.33,0,225.474-101.144,225.474-225.474C450.948,101.151,349.804,0,225.474,0z M225.474,409.323\n                    c-101.373,0-183.848-82.475-183.848-183.848S124.101,41.626,225.474,41.626s183.848,82.475,183.848,183.848\n                    S326.847,409.323,225.474,409.323z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <path d=\"M505.902,476.472L386.574,357.144c-8.131-8.131-21.299-8.131-29.43,0c-8.131,8.124-8.131,21.306,0,29.43l119.328,119.328\n                    c4.065,4.065,9.387,6.098,14.715,6.098c5.321,0,10.649-2.033,14.715-6.098C514.033,497.778,514.033,484.596,505.902,476.472z\"/>\n                </g>\n            </g>\n        </symbol>\n        <symbol id=\"saved\" viewBox=\"0 0 404 404\">\n            <path d=\"m277.527344 0h-267.257813c-5.523437 0-10 4.476562-10 10v374.527344c-.011719 7.503906 4.183594 14.378906 10.855469 17.804687\n                6.675781 3.429688 14.707031 2.832031 20.796875-1.550781l111.976563-80.265625 111.976562 80.269531c6.097656 4.367188 14.121094 4.960938\n                20.792969 1.535156 6.667969-3.425781 10.863281-10.292968 10.863281-17.792968v-374.527344c0-5.523438-4.480469-10-10.003906-10zm0 0\" />\n        </symbol>\n        <symbol id=\"trends\" viewBox=\"0 0 512 512\">\n            <path d=\"m284.90625 132.957031c-3.484375-5.761719-10.378906-8.5-16.867188-6.691406-6.484374 1.808594-10.972656 7.71875-10.972656 14.449219\n                0 18.308594-14.894531 33.199218-33.199218 33.199218-18.304688\n                0-33.199219-14.890624-33.199219-33.199218v-125.714844c0-6.066406-3.65625-11.535156-9.261719-13.855469-5.605469-2.324219-12.054688-1.042969-16.34375\n                3.25-1.6875 1.683594-41.683594 41.917969-82.207031 102.703125-23.898438 35.84375-42.96875 71.398438-56.679688 105.675782-17.367187 43.425781-26.175781\n                84.996093-26.175781 123.5625 0 96.859374 78.804688 175.664062 175.667969 175.664062 96.859375 0 175.664062-78.804688\n                175.664062-175.664062.003907-62.003907-22.347656-130.429688-66.425781-203.378907zm-9.148438 199.476563c0 8.285156-6.714843 15-15 15-8.28125\n                0-15-6.714844-15-15v-28.050782l-74.6875 74.691407c-2.816406 2.8125-6.628906 4.390625-10.609374 4.390625-3.976563\n                0-7.792969-1.578125-10.605469-4.390625l-34.835938-34.839844-23.476562 23.476563c-5.859375 5.859374-15.355469 5.859374-21.214844\n                0-5.859375-5.859376-5.859375-15.355469 0-21.214844l34.085937-34.082032c5.859376-5.855468 15.355469-5.855468 21.214844.003907l34.832032 34.835937\n                64.085937-64.085937h-28.054687c-8.285157 0-15-6.714844-15-15 0-8.285157 6.714843-15 15-15h64.269531c8.28125 0 15 6.71875 15 15v64.265625zm0 0\" />\n        </symbol>\n        <symbol id=\"about\" viewBox=\"0 0 512 512\">\n            <g>\n                <g>\n                    <path d=\"M256,0C114.497,0,0,114.507,0,256c0,141.503,114.507,256,256,256c141.503,0,256-114.507,256-256\n\t\t\tC512,114.497,397.492,0,256,0z M256,472c-119.393,0-216-96.615-216-216c0-119.393,96.615-216,216-216\n\t\t\tc119.393,0,216,96.615,216,216C472,375.393,375.384,472,256,472z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <path d=\"M256,214.33c-11.046,0-20,8.954-20,20v128.793c0,11.046,8.954,20,20,20s20-8.955,20-20.001V234.33\n\t\t\tC276,223.284,267.046,214.33,256,214.33z\"/>\n                </g>\n            </g>\n            <g>\n                <g>\n                    <circle cx=\"256\" cy=\"162.84\" r=\"27\" />\n                </g>\n            </g>\n        </symbol>\n    </svg>\n}","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/'\n})\n\nexport const api = {\n    // Search\n    getMoviesByName(page: number, movie: string) {\n        return instance.get(`search/movie?api_key=db9335d85fa75ffde96f893df33598bb&query=${movie}&page=${page}`).then(res => res.data)\n    },\n    getUpcomingMovies(page: number) {\n        return instance.get(`movie/upcoming?api_key=db9335d85fa75ffde96f893df33598bb&page=${page}`).then(res => res.data)\n    },\n    // About\n    getMovieCredits(movieID: number | null) {\n        return instance.get(`movie/${movieID}?api_key=db9335d85fa75ffde96f893df33598bb`).then(res => res.data)\n    },\n    // Trends\n    getRatedMovies(page: number) {\n        return instance.get(`movie/top_rated?api_key=db9335d85fa75ffde96f893df33598bb&page=${page}`).then(res => res.data)\n    },\n    // Genres\n    getMoviesByGenre(page: number, genres: string) {\n        return instance.get(`discover/movie?api_key=db9335d85fa75ffde96f893df33598bb&sort_by=release_date.desc&page=${page}&with_genres=${genres}`)\n            .then(res => res.data)\n    },\n    getAllGenres() {\n        return instance.get(`genre/movie/list?api_key=db9335d85fa75ffde96f893df33598bb`).then(res => res.data)\n    }\n}","import { api } from \"../api\"\nimport { MovieType } from \"../types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    ratedMovies: [] as Array<MovieType>,\n    currentPage: 1,\n    totalPages: 0,\n    isFetching: false,\n    isFetchingPage: false,\n}\n\nexport const trendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // Loaders\n        case 'M/TRENDS/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'M/TRENDS/TOGGLE_IS_FETCHING_PAGE':\n            return {\n                ...state,\n                isFetchingPage: action.isFetchingPage\n            }\n        // Pages\n        case 'M/TRENDS/SET_TOTAL_PAGES':\n            return {\n                ...state,\n                totalPages: action.totalPages\n            }\n        case 'M/TRENDS/SET_CURRENT_PAGE':\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        // Trends\n        case 'M/TRENDS/SET_RATED_MOVIES':\n            return {\n                ...state,\n                ratedMovies: action.ratedMovies\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Loaders\n    setIsFetching: (isFetching: boolean) => ({ type: 'M/TRENDS/TOGGLE_IS_FETCHING', isFetching } as const),\n    setIsFetchingPage: (isFetchingPage: boolean) => ({ type: 'M/TRENDS/TOGGLE_IS_FETCHING_PAGE', isFetchingPage } as const),\n    // Pages\n    setCurrentPage: (currentPage: number) => ({ type: 'M/TRENDS/SET_CURRENT_PAGE', currentPage: currentPage } as const),\n    setTotalPages: (totalPages: number) => ({ type: 'M/TRENDS/SET_TOTAL_PAGES', totalPages: totalPages } as const),\n    // Trends\n    setRatedMovies: (ratedMovies: Array<MovieType>) => ({ type: 'M/TRENDS/SET_RATED_MOVIES', ratedMovies: ratedMovies } as const),\n}\n\n\n// Trends\nexport const onGetRatedMovies = (page: number): ThunkType => async(dispatch, getState) => {\n    const currentPage = getState().trends.currentPage\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const ratedMoviesData = await api.getRatedMovies(page)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setIsFetching(false))\n    dispatch(actions.setTotalPages(ratedMoviesData.total_pages))\n    dispatch(actions.setRatedMovies(ratedMoviesData.results))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","export default __webpack_public_path__ + \"static/media/imagePlaceholder.8226fdf2.jpg\";","import s from './Movie.module.scss'\nimport imagePlaceholder from './../../../images/imagePlaceholder.jpg'\nimport { truncateString } from '../../../utils/truncateString'\nimport { NavLink } from 'react-router-dom'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppStateType } from '../../../redux/store'\n\ntype PropsType = {\n    id: number\n    title: string\n    poster: string\n    rating: number\n    genresID: Array<number>\n    release: string\n}\n\nexport const Movie: React.FC<PropsType> = ({ title, poster, rating, id, genresID, release }) => {\n    const allGenres = useSelector((state: AppStateType) => state.genres.allGenres)\n    console.log(genresID);\n    \n    \n    const genresNames = !genresID ? [] : allGenres\n        .map(el => genresID.includes(el.id) ? el.name : '')\n        .filter(el => el.length !== 0)\n    \n    // Img load slow internet\n    const [loaded, setLoaded] = useState(false)\n\n    return <NavLink className={s.movie} to={'/about/' + id}>\n        <img onLoad={() => setLoaded(true)} className={s.image} src={poster === null || !loaded ? imagePlaceholder : `https://image.tmdb.org/t/p/w500${poster}`} alt={title} />\n        <div className={s.info}>\n            <h3>{truncateString(title, 25)}</h3>\n            <p>{rating ? `${rating} / 10` : 'Rating is not availible'}</p>\n        </div>\n        <div className={s.genres}>\n            {genresNames.length === 0 ? <span key={'69'}>No genres</span>\n                : genresNames.map(el => <span key={'' + el}>{el}</span>)}\n            <p className={s.release}>{release.replaceAll('-', '.')}</p>\n        </div>\n    </NavLink>\n}","export const truncateString = (str: string, num: number) => {\n    // If the length of str is less than or equal to num\n    // just return str--don't truncate it.\n    if (str.length <= num) {\n        return str\n    }\n    // Return str truncated with '...' concatenated to the end of str.\n    return str.slice(0, num - 3) + '...'\n}","import s from './Paginator.module.scss'\n\ntype PropsType = {\n    totalPages: number\n    currentPage: number\n    onPageChange: (page: number) => void\n}\n\nexport const Paginator: React.FC<PropsType> = ({ totalPages, currentPage = 1, onPageChange } ) => {\n    \n    const maxPages: number = 3\n\n    // ensure current page isn't out of range\n    if (currentPage < 1) {\n        currentPage = 1\n    } else if (currentPage > totalPages) {\n        currentPage = totalPages\n    }\n\n    let startPage: number, endPage: number\n    if (totalPages <= maxPages) {\n        // total pages less than max so show all pages\n        startPage = 1\n        endPage = totalPages\n    } else {\n        // total pages more than max so calculate start and end pages\n        let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2)\n        let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1\n        if (currentPage <= maxPagesBeforeCurrentPage) {\n            // current page near the start\n            startPage = 1\n            endPage = maxPages\n        } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n            // current page near the end\n            startPage = totalPages - maxPages + 1\n            endPage = totalPages\n        } else {\n            // current page somewhere in the middle\n            startPage = currentPage - maxPagesBeforeCurrentPage\n            endPage = currentPage + maxPagesAfterCurrentPage\n        }\n    }\n\n    // create an array of pages to ng-repeat in the pager control\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i)\n\n\n    return <div className={s.pagination}>\n        {pages.map(p => {\n            return <button key={p} className={`${currentPage === p && s.selectedPage} ${s.pages}`}\n            onClick={() => { onPageChange(p) }}>{p}</button>\n        })}\n    </div>\n}","import { memo } from 'react'\nimport s from './Preloader.module.scss'\n\nexport const Preloader: React.FC = memo(() => {\n    return (\n        <div className={s.lds_roller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n})","import { memo, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, onGetRatedMovies } from '../../redux/trendsReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Trends.module.scss'\nimport { Movie } from './../Common/Movie/Movie'\nimport { MovieType } from '../../types'\nimport { Paginator } from './../Common/Paginator/Paginator'\nimport { Preloader } from './../Common/Preloader/Preloader'\n\nexport const Trends: React.FC = memo(() => {\n    const ratedMovies = useSelector((state: AppStateType) => state.trends.ratedMovies)\n    const currentPage = useSelector((state: AppStateType) => state.trends.currentPage)\n    const totalPages = useSelector((state: AppStateType) => state.trends.totalPages)\n    // Loaders\n    const isFetching = useSelector((state: AppStateType) => state.trends.isFetching)\n    const isFetchingPage = useSelector((state: AppStateType) => state.trends.isFetchingPage)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const getRatedMovies = (page: number) => { dispatch(onGetRatedMovies(page)) }\n        getRatedMovies(currentPage)\n    }, [dispatch, currentPage])\n\n    const onPageChange = (page: number) => dispatch(actions.setCurrentPage(page))\n\n    return <div className={s.trends}>\n        {isFetching ? <Preloader />\n            :<>\n                <div className={s.head}>\n                    <span className={s.heading}>Trends</span>\n                    <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                </div>\n                {isFetchingPage ? <Preloader />\n                    : <>\n                        <div className={s.movies}>\n                            {ratedMovies.map((m: MovieType) =>\n                                <Movie genresID={m.genre_ids} release={m.release_date} key={m.id} id={m.id} title={m.title} poster={`https://image.tmdb.org/t/p/w500${m.poster_path}`} rating={m.vote_average} />\n                            )}\n                        </div>\n                        <div className={s.head}>\n                            <span className={s.heading}>Trends</span>\n                            <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={onPageChange} />\n                        </div>\n                    </>}\n            </>}\n    </div>\n})","import { api } from \"./../api\"\nimport { MovieType } from \"./../types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    movies: [] as Array<MovieType>,\n    currentSearchName: '',\n    currentPage: 1,\n    totalPages: 1,\n    isFetching: false,\n    isFetchingPage: false,\n}\n\nexport const searchReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'M/SEARCH/SET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies\n            }\n        case 'M/SEARCH/SET_CURRENT_SEARCH_NAME':\n            return {\n                ...state,\n                currentSearchName: action.currentSearchName\n            }\n        case 'M/SEARCH/SET_CURRENT_PAGE':\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case 'M/SEARCH/SET_TOTAL_PAGES':\n            return {\n                ...state,\n                totalPages: action.totalPages\n            }\n        case 'M/SEARCH/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'M/SEARCH/TOGGLE_IS_FETCHING_PAGE':\n            return {\n                ...state,\n                isFetchingPage: action.isFetchingPage\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Common\n    setIsFetching: (isFetching: boolean) => ({ type: 'M/SEARCH/TOGGLE_IS_FETCHING', isFetching } as const),\n    setIsFetchingPage: (isFetchingPage: boolean) => ({ type: 'M/SEARCH/TOGGLE_IS_FETCHING_PAGE', isFetchingPage } as const),\n    // Search\n    setMovies: (movies: Array<MovieType>) => ({ type: 'M/SEARCH/SET_MOVIES', movies: movies } as const),\n    setCurrentSearchName: (name: string) => ({ type: 'M/SEARCH/SET_CURRENT_SEARCH_NAME', currentSearchName: name } as const),\n    setCurrentPage: (page: number) => ({ type: 'M/SEARCH/SET_CURRENT_PAGE', currentPage: page } as const),\n    setTotalPages: (pages: number) => ({ type: 'M/SEARCH/SET_TOTAL_PAGES', totalPages: pages } as const),\n}\n\n// Search\nexport const onGetMoviesByName = (page: number, movie: string): ThunkType => async (dispatch, getState) => {\n    const currentPage = getState().search.currentPage\n    // To keep pagination and search it needs two fetches\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const moviesData = await api.getMoviesByName(page, movie)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setTotalPages(moviesData.total_pages))\n    dispatch(actions.setMovies(moviesData.results))\n}\n\nexport const onGetUpcomingMovies = (page: number): ThunkType => async (dispatch, getState) => {\n    const currentPage = getState().search.currentPage\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const moviesData = await api.getUpcomingMovies(page)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setTotalPages(moviesData.total_pages))\n    dispatch(actions.setMovies(moviesData.results))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import s from './Search.module.scss'\nimport { Field, Form, Formik } from 'formik'\nimport React from 'react'\n\ntype PropsType = {\n    getMoviesByName: (page: number, movie: string) => void\n    setCurrentPage: (page: number) => void\n}\n\ntype FormType = {\n    movie: string\n}\n\ntype ValidType = {\n    movie?: string\n}\n\nconst validate = (values: any) => {\n    const errors: ValidType = {}\n    if (!values.movie) {\n        errors.movie = 'You can\\'t search for nothing'\n    }\n    if (values.movie.length > 30) {\n        errors.movie = 'You are gay'\n    }\n    return errors\n}\n\nexport const SearchForm: React.FC<PropsType> = React.memo(({ getMoviesByName, setCurrentPage }) => {\n\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        getMoviesByName(1, values.movie)\n        setCurrentPage(1)\n        setSubmitting(false)\n    }\n\n    return <div className={s.form}>\n        <Formik\n            enableReinitialize\n            initialValues={{ movie: '' }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={validate}\n            onSubmit={submit}\n        >\n            {({ errors, isSubmitting }) => (\n                <Form>\n                    {errors.movie && <span className={s.emptyError}>{errors.movie}</span>}\n                    <Field className={s.textarea} maxLength=\"30\" type=\"text\" name=\"movie\" placeholder=\"Type here to search...\" />\n                    <button className={s.button} type=\"submit\" disabled={isSubmitting}>\n                        <svg viewBox=\"0 0 20 20\">\n                            <path d=\"M19.129,18.164l-4.518-4.52c1.152-1.373,1.852-3.143,1.852-5.077c0-4.361-3.535-7.896-7.896-7.896\n\t\t\t\t\t\t\t\tc-4.361,0-7.896,3.535-7.896,7.896s3.535,7.896,7.896,7.896c1.934,0,3.705-0.698,5.078-1.853l4.52,4.519\n\t\t\t\t\t\t\t\tc0.266,0.268,0.699,0.268,0.965,0C19.396,18.863,19.396,18.431,19.129,18.164z M8.567,15.028c-3.568,0-6.461-2.893-6.461-6.461\n\t\t\t\t\t\t\t\ts2.893-6.461,6.461-6.461c3.568,0,6.46,2.893,6.46,6.461S12.135,15.028,8.567,15.028z\"></path>\n                        </svg>\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n})","import { useDispatch, useSelector } from 'react-redux'\nimport { onGetUpcomingMovies, onGetMoviesByName, actions } from '../../redux/searchReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Search.module.scss'\nimport { Movie } from '../Common/Movie/Movie'\nimport { SearchForm } from './SearchForm'\nimport { MovieType } from './../../types'\nimport { memo, useEffect } from 'react'\nimport { Paginator } from './../Common/Paginator/Paginator'\nimport { Preloader } from './../Common/Preloader/Preloader'\n\nexport const Search: React.FC = memo(() => {\n    const movies = useSelector((state: AppStateType) => state.search.movies)\n    const currentSearchName = useSelector((state: AppStateType) => state.search.currentSearchName)\n    const currentPage = useSelector((state: AppStateType) => state.search.currentPage)\n    const totalPages = useSelector((state: AppStateType) => state.search.totalPages)\n    // Loaders\n    const isFetching = useSelector((state: AppStateType) => state.search.isFetching)\n    const isFetchingPage = useSelector((state: AppStateType) => state.search.isFetchingPage)\n\n    const dispatch = useDispatch()\n\n    const getMoviesByName = (page: number, movie: string) => {\n        dispatch(actions.setCurrentSearchName(movie))\n        dispatch(onGetMoviesByName(page, movie))\n    }\n    const getUpcomingMovies = (page: number) => { dispatch(onGetUpcomingMovies(page)) }\n    // To reset to 1 when sth is searched\n    const setCurrentPage = (page: number) => { dispatch(actions.setCurrentPage(page)) }\n\n    useEffect(() => {\n        if (currentSearchName) {\n            getMoviesByName(currentPage, currentSearchName)\n        } else {\n            getUpcomingMovies(currentPage)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentPage])\n    \n    return <div className={s.search}>\n        <SearchForm getMoviesByName={getMoviesByName} setCurrentPage={setCurrentPage} />\n        {isFetching ? <Preloader /> : movies.length < 1\n            ? <span className={s.heading}>No movies found.</span>\n            : <>\n                <div className={s.head}>\n                    <span className={s.heading}>{!currentSearchName ? 'Upcoming' : currentSearchName}</span>\n                    <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n                </div>\n                {isFetchingPage ? <Preloader />\n                    : <> <div className={s.movies}>\n                            {movies.map((m: MovieType) =>\n                                <Movie genresID={m.genre_ids} release={m.release_date} key={m.id} id={m.id} title={m.title} poster={m.poster_path} rating={m.vote_average} />\n                            )}\n                        </div>\n                        <div className={s.head}>\n                            <span className={s.heading}>{!currentSearchName ? 'Upcoming' : currentSearchName}</span>\n                            <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n                        </div>\n                    </>\n                }\n            </>}\n    </div>\n})","import { api } from \"../api\"\nimport { GenresType, MovieType } from \"../types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    movies: [] as Array<MovieType>,\n    allGenres: [] as Array<GenresType>,\n    genres: [] as Array<GenresType>,\n    currentPage: 1,\n    totalPages: 0,\n    isFetching: false,\n    isFetchingPage: false,\n}\n\nexport const genresReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // Loaders\n        case 'M/GENRES/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'M/GENRES/TOGGLE_IS_FETCHING_PAGE':\n            return {\n                ...state,\n                isFetchingPage: action.isFetchingPage\n            }\n        // Pages\n        case 'M/GENRES/SET_TOTAL_PAGES':\n            return {\n                ...state,\n                totalPages: action.totalPages\n            }\n        case 'M/GENRES/SET_CURRENT_PAGE':\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        // Genres\n        case 'M/GENRES/SET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies\n            }\n        case 'M/GENRES/SET_ALL_GENRES':\n            return {\n                ...state,\n                allGenres: action.allGenres\n            }\n        case 'M/GENRES/SET_GENRES':\n            return {\n                ...state,\n                genres: action.genres\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Loaders\n    setIsFetching: (isFetching: boolean) => ({ type: 'M/GENRES/TOGGLE_IS_FETCHING', isFetching } as const),\n    setIsFetchingPage: (isFetchingPage: boolean) => ({ type: 'M/GENRES/TOGGLE_IS_FETCHING_PAGE', isFetchingPage } as const),\n    // Pages\n    setCurrentPage: (currentPage: number) => ({ type: 'M/GENRES/SET_CURRENT_PAGE', currentPage: currentPage } as const),\n    setTotalPages: (totalPages: number) => ({ type: 'M/GENRES/SET_TOTAL_PAGES', totalPages: totalPages } as const),\n    // Genres\n    setMovies: (movies: Array<MovieType>) => ({ type: 'M/GENRES/SET_MOVIES', movies: movies } as const),\n    // Geting all Genres and then use them as options\n    setAllGenres: (allGenres: Array<GenresType>) => ({ type: 'M/GENRES/SET_ALL_GENRES', allGenres: allGenres } as const),\n    setGenres: (genres: Array<GenresType>) => ({ type: 'M/GENRES/SET_GENRES', genres: genres } as const),\n}\n\n// Genres\nexport const onGetAllGenres = (): ThunkType => async dispatch => {\n    actions.setIsFetching(true)\n    const genresData = await api.getAllGenres()\n    actions.setIsFetching(false)\n    dispatch(actions.setAllGenres(genresData.genres))\n}\n\n// Search\nexport const onGetMoviesByGenre = (page: number, genres: string): ThunkType => async (dispatch, getState) => {\n    const currentPage = getState().search.currentPage\n    // To keep pagination and search it needs two fetches\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(true))\n    } else {\n        dispatch(actions.setIsFetchingPage(true))\n    }\n    const moviesData = await api.getMoviesByGenre(page, genres)\n    if (currentPage === 1) {\n        dispatch(actions.setIsFetching(false))\n    } else {\n        dispatch(actions.setIsFetchingPage(false))\n    }\n    dispatch(actions.setTotalPages(moviesData.total_pages))\n    dispatch(actions.setMovies(moviesData.results))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import s from './Genres.module.scss'\nimport Select from 'react-dropdown-select'\nimport React from 'react'\nimport { GenresType } from '../../types'\n\ntype PropsType = {\n    genres: Array<GenresType>\n    allGenres: Array<GenresType>\n    setGenres: (genres: Array<GenresType>) => void\n}\n\nexport const GenresSelect: React.FC<PropsType> = React.memo(({ setGenres, allGenres, genres }) => {\n    return <div className={s.form}>\n        <Select name=\"genres\"\n            multi\n            options={allGenres.map(el => {\n                return { label: el.name, value: el.id }\n            })}\n            values={genres.map(el => {\n                return { label: el.name, value: el.id }\n            })}\n     \n            onChange={(value) => setGenres(value.map(el => {\n                return { name: el.label, id: el.value }\n            }))}\n        />\n    </div>\n})","import { useDispatch, useSelector } from 'react-redux'\nimport { actions, onGetMoviesByGenre } from '../../redux/genresReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Genres.module.scss'\nimport { Movie } from '../Common/Movie/Movie'\nimport { GenresSelect } from './GenresSelect'\nimport { GenresType, MovieType } from '../../types'\nimport { memo, useEffect } from 'react'\nimport { Paginator } from '../Common/Paginator/Paginator'\nimport { Preloader } from '../Common/Preloader/Preloader'\n\nexport const Genres: React.FC = memo(() => {\n    const movies = useSelector((state: AppStateType) => state.genres.movies)\n    const allGenres = useSelector((state: AppStateType) => state.genres.allGenres)\n    const genres = useSelector((state: AppStateType) => state.genres.genres)\n    // Loaders\n    const currentPage = useSelector((state: AppStateType) => state.genres.currentPage)\n    const totalPages = useSelector((state: AppStateType) => state.genres.totalPages)\n    // Loaders\n    const isFetching = useSelector((state: AppStateType) => state.genres.isFetching)\n    const isFetchingPage = useSelector((state: AppStateType) => state.genres.isFetchingPage)\n\n    const dispatch = useDispatch()\n\n    const setGenres = (genres: Array<GenresType>) => { dispatch(actions.setGenres(genres)) }\n    const setCurrentPage = (page: number) => { dispatch(actions.setCurrentPage(page)) }\n\n    // get movies\n    useEffect(() => {\n        const getMoviesByGenre = (page: number, genres: string) => { dispatch(onGetMoviesByGenre(page, genres)) }\n        getMoviesByGenre(currentPage, genres.map(el => el.id).join(','))\n    }, [dispatch, currentPage, genres])\n    \n    return <div className={s.search}>\n        <GenresSelect genres={genres} allGenres={allGenres} setGenres={setGenres} />\n        {isFetching ? <Preloader /> : movies.length < 1\n            ? <span className={s.heading}>No movies found.</span>\n            : <>\n                <div className={s.head}>\n                    <span className={s.heading}>{genres.length === 0 ? 'Select genres' : genres.map(el => el.name).join(', ')}</span>\n                    <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n                </div>\n                {isFetchingPage ? <Preloader />\n                    : <> <div className={s.movies}>\n                            {movies.map((m: MovieType) =>\n                                <Movie genresID={m.genre_ids} release={m.release_date} key={m.id} id={m.id} title={m.title} poster={m.poster_path} rating={m.vote_average} />\n                            )}\n                        </div>\n                        <div className={s.head}>\n                            <span className={s.heading}>{genres.length === 0 ? 'Select genres' : genres.map(el => el.name).join(', ')}</span>\n                            <Paginator currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n                        </div>\n                    </>\n                }\n            </>}\n    </div>\n})","import { api } from \"../api\"\nimport { MovieType, SavedMovieType } from \"../types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    savedMovies: [] as Array<SavedMovieType>,\n    aboutMovie: null as null | MovieType,\n    isFetching: false,\n}\n\nexport const aboutReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // Loaders\n        case 'M/ABOUT/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        // About\n        case 'M/ABOUT/SET_ABOUT_MOVIE':\n            return {\n                ...state,\n                aboutMovie: action.aboutMovie\n            }\n        case 'M/ABOUT/SET_SAVED_MOVIE':\n            return {\n                ...state,\n                savedMovies: action.savedMovies\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Loaders\n    setIsFetching: (isFetching: boolean) => ({ type: 'M/ABOUT/TOGGLE_IS_FETCHING', isFetching } as const),\n    // About\n    setAboutMovie: (movie: MovieType) => ({ type: 'M/ABOUT/SET_ABOUT_MOVIE', aboutMovie: movie } as const),\n    setSavedMovies: (movies: Array<SavedMovieType>) => ({ type: 'M/ABOUT/SET_SAVED_MOVIE', savedMovies: movies } as const),\n}\n\n// About\nexport const onSetAboutMovie = (id: number): ThunkType => async dispatch => {\n    dispatch(actions.setIsFetching(true))\n    const moviesData = await api.getMovieCredits(id)\n    dispatch(actions.setIsFetching(false))\n    dispatch(actions.setAboutMovie(moviesData))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk, { ThunkAction } from 'redux-thunk'\nimport { searchReducer } from './searchReducer'\nimport { genresReducer } from './genresReducer'\nimport { trendsReducer } from './trendsReducer'\nimport { aboutReducer } from './aboutReducer'\n\nconst rootReducer = combineReducers({\n    search: searchReducer,\n    genres: genresReducer,\n    trends: trendsReducer,\n    about: aboutReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n// @ts-ignore\nwindow.__store__ = store\n\ntype RootReducerType = typeof rootReducer // (globalstate: GLOBALSTATE) => GLOBALSTATE\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>","import { memo, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { onSetAboutMovie } from '../../redux/aboutReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './About.module.scss'\nimport { MovieType, SavedMovieType } from '../../types'\nimport { NavLink, useParams } from 'react-router-dom'\nimport { Preloader } from '../Common/Preloader/Preloader'\nimport imgPlaceholder from './../../images/imagePlaceholder.jpg'\n\nexport const About: React.FC = memo(() => {    \n    const aboutMovie: null | MovieType = useSelector((state: AppStateType) => state.about.aboutMovie)\n    const savedMovies: Array<SavedMovieType> = useSelector((state: AppStateType) => state.about.savedMovies)\n    const isFetching = useSelector((state: AppStateType) => state.about.isFetching)\n    \n    const dispatch = useDispatch()\n    // Getting userID\n    const params: { aboutID: string | undefined } = useParams()\n    const userID = params.aboutID\n\n    useEffect(() => {\n        // Seting the movie\n        const setAboutMovie = (id: number) => { dispatch(onSetAboutMovie(id)) }\n        !!userID && setAboutMovie(+userID)\n    }, [dispatch, userID])\n\n    const saveMovie = (e: React.MouseEvent<HTMLInputElement>) => {\n        const movieToSave = {\n            id: aboutMovie?.id,\n            title: aboutMovie?.title,\n            poster: `https://image.tmdb.org/t/p/w500${aboutMovie?.poster_path}`,\n            rate: aboutMovie?.vote_average,\n            release_date: aboutMovie?.release_date,\n            genre_ids: aboutMovie?.genres.map(g => g.id)\n        }\n        if (savedMovies.length === 0) {\n            localStorage.setItem('savedMovies', `[${JSON.stringify(movieToSave)}]`)\n        } else {\n            localStorage.setItem('savedMovies', JSON.stringify([...savedMovies, movieToSave]))\n        }\n        e.currentTarget.disabled = true\n    }\n\n    // Img load slow internet\n    const [loaded, setLoaded] = useState(false)\n\n    return <div className={s.whrapper}>\n        {isFetching ? <Preloader />\n            : <>\n                {!aboutMovie ? <p className={s.empty}>To see something select a <NavLink to=\"/search\">movie</NavLink>.</p>\n                    : <div className={s.about}>\n                        <div>\n                            <img onLoad={() => setLoaded(true)} className={s.img} src={aboutMovie.poster_path === null || !loaded\n                                ? imgPlaceholder :`https://image.tmdb.org/t/p/w500${aboutMovie.poster_path}`} alt={aboutMovie.title} />\n                        </div>\n                        <div className={s.content}>\n                            <h2 className={s.heading}>{aboutMovie.title}</h2>\n                            <p className={s.tagline}>{aboutMovie.tagline}</p>\n                            <div className={s.rates}>\n                                <span className={s.rate}>{aboutMovie.vote_average} / 10 <span>({aboutMovie.vote_count})</span></span>\n                                {/* API problems */}\n                                {/* <span className={s.rate}>{aboutMovie.production_countries[0].name} / {aboutMovie.runtime} min. \n                                / {aboutMovie.release_date.slice(0, 4)} year</span> */}\n                                <span className={s.rate}>{aboutMovie.runtime} min. / {aboutMovie.release_date.slice(0, 4)} year</span>\n                            </div>\n                            <p className={s.sub}>Genres</p>\n                            <div className={s.genres}>\n                                {aboutMovie.genres.map(g => <span key={g.id}>{g.name}</span>)}\n                            </div>\n                            <p className={s.sub}>Languages</p>\n                            <div className={s.languages}>\n                                {aboutMovie.spoken_languages.map(g => <span key={g.name}>{g.name}</span>)}\n                            </div>\n                            <p className={s.sub}>Overview</p>\n                            <p className={s.overview}>{aboutMovie.overview}</p>\n                            {savedMovies.some(el => el.id === aboutMovie.id)\n                                ? <button title=\"You have already saved this movie\" disabled className={s.button}>save</button>\n                                : <button onClick={saveMovie as () => void} className={s.button}>save</button>}\n                        </div>\n                    </div>}\n            </>\n        }\n    </div>\n})","import { memo, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions } from '../../redux/aboutReducer'\nimport { AppStateType } from '../../redux/store'\nimport s from './Saved.module.scss'\nimport { Movie } from './../Common/Movie/Movie'\nimport { SavedMovieType } from '../../types'\nimport { NavLink } from 'react-router-dom'\nimport { Preloader } from '../Common/Preloader/Preloader'\n\nexport const Saved: React.FC = memo(() => {\n    const savedMovies = useSelector((state: AppStateType) => state.about.savedMovies)\n    const isFetching = useSelector((state: AppStateType) => state.about.isFetching)\n\n    const dispatch = useDispatch()\n    const localSavedItems = localStorage.getItem('savedMovies')\n\n    useEffect(() => {\n        dispatch(actions.setSavedMovies(JSON.parse('' + localSavedItems)))\n    }, [dispatch, localSavedItems])\n    \n    return <div className={s.whrapper}>\n        {isFetching ? <Preloader />\n            : <>\n                {savedMovies === null || savedMovies.length === 0 ? <p className={s.empty}>To see something save a <NavLink to=\"/search\">movie</NavLink>.</p>\n                    : <div className={s.saved}>\n                        <div className={s.movies}>\n                            {savedMovies.map((m: SavedMovieType) =>\n                                <Movie genresID={m.genre_ids} release={m.release_date} key={m.id} id={m.id} title={m.title} poster={m.poster} rating={m.rate} />\n                            )}\n                        </div>\n                    </div>}\n            </>}\n    </div>\n})","import s from './App.module.scss'\nimport { Header } from './components/Header/Header'\nimport { Trends } from './components/Trends/Trends'\nimport { Search } from './components/Search/Search'\nimport { Genres } from './components/Genres/Genres'\nimport { Route, HashRouter, Switch, Redirect } from 'react-router-dom'\nimport { Provider, useDispatch } from 'react-redux'\nimport { store } from './redux/store'\nimport { About } from './components/About/About'\nimport { memo, useEffect } from 'react'\nimport { Saved } from './components/Saved/Saved'\nimport { SavedMovieType } from './types'\nimport { actions } from './redux/aboutReducer'\nimport { onGetAllGenres } from './redux/genresReducer'\n\nconst App: React.FC = memo(() => {\n  const localSavedItems = localStorage.getItem('savedMovies')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (localSavedItems === null) {\n      localStorage.setItem('savedMovies', '[]')\n    } else {\n      const setSavedMovies = (movies: Array<SavedMovieType>) => { dispatch(actions.setSavedMovies(movies)) }\n      setSavedMovies(JSON.parse(localSavedItems))\n    }\n  }, [dispatch, localSavedItems])\n\n  // to get all genres\n  useEffect(() => {\n    dispatch(onGetAllGenres())\n  }, [dispatch])\n  \n  return (\n    <div className={s.app}>\n      <Header />\n      <main className={s.main}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to={'/search'} />} />\n          <Route path=\"/search\" render={() => <Search />} />\n          <Route path=\"/genres\" render={() => <Genres />} />\n          <Route path=\"/trends\" render={() => <Trends />} />\n          <Route path=\"/saved\" render={() => <Saved />} />\n          <Route path=\"/about/:aboutID?\" render={() => <About />} />\n          <Route exact path=\"*\" render={() => <Redirect to={'/search'} />} />\n        </Switch>\n      </main>\n    </div>\n  )\n})\n\nexport const MoviesApp: React.FC = () => {\n  return <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { MoviesApp } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoviesApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3Q-BZ\",\"head\":\"Search_head__18Aj1\",\"heading\":\"Search_heading__v1U5b\",\"movies\":\"Search_movies__z4bek\",\"form\":\"Search_form__1ch7D\",\"textarea\":\"Search_textarea__3eFxG\",\"button\":\"Search_button__3PDnr\",\"emptyError\":\"Search_emptyError__uXOYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Genres_search__1wyEK\",\"head\":\"Genres_head__2kUNA\",\"heading\":\"Genres_heading__8ftY7\",\"movies\":\"Genres_movies__2R6xW\",\"form\":\"Genres_form__3Ctbv\",\"textarea\":\"Genres_textarea__3gMhk\",\"button\":\"Genres_button__eCzHx\",\"emptyError\":\"Genres_emptyError__PdyJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trends\":\"Trends_trends__1DSXL\",\"head\":\"Trends_head__tjlYJ\",\"heading\":\"Trends_heading__P6rY2\",\"movies\":\"Trends_movies__2IUhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2tGnw\",\"image\":\"Movie_image__2c8pa\",\"info\":\"Movie_info__11EVO\",\"genres\":\"Movie_genres__2kGUK\",\"release\":\"Movie_release__38Vaj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whrapper\":\"Saved_whrapper__1TaOj\",\"empty\":\"Saved_empty__3pFto\",\"saved\":\"Saved_saved__18Cqo\",\"movies\":\"Saved_movies__3Ixyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__1aTti\",\"pages\":\"Paginator_pages__2uoqC\",\"selectedPage\":\"Paginator_selectedPage__3-1wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"Preloader_lds_roller__2RD8m\",\"lds-roller\":\"Preloader_lds-roller__jW5PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whrapper\":\"About_whrapper__Wj1sY\",\"empty\":\"About_empty__3QiTk\",\"about\":\"About_about__AswM6\",\"img\":\"About_img__1kT_-\",\"content\":\"About_content__3MRnc\",\"heading\":\"About_heading__2N5u-\",\"tagline\":\"About_tagline__1fPa3\",\"rates\":\"About_rates__2JoUV\",\"rate\":\"About_rate__3dCdz\",\"sub\":\"About_sub__2aUj1\",\"genres\":\"About_genres__24h5N\",\"languages\":\"About_languages__2wL0i\",\"overview\":\"About_overview__38nBN\",\"button\":\"About_button__3ohsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"navigation\":\"Header_navigation__21e3H\",\"navigator\":\"Header_navigator__7FmRV\",\"link\":\"Header_link__1uLZ-\",\"active\":\"Header_active__3GX0s\"};"],"sourceRoot":""}